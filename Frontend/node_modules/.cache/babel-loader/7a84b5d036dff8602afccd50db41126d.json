{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cicu\\\\Documents\\\\Assambler\\\\gifty-page\\\\frontend\\\\src\\\\Component\\\\AddGifs\\\\AddGifs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddGifs = _ref => {\n  _s();\n\n  let {\n    setaddGifs\n  } = _ref;\n  const [value, setValue] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const searchGif = e => {\n    e.preventDefault();\n\n    if (value === \"\") {\n      setError(true);\n      return;\n    }\n\n    setError(false);\n    setaddGifs(value); //for delete the input set\n\n    setValue(\"\");\n    console.log(\"entra input\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchGif,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search..\",\n        onChange: e => setValue(e.target.value),\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \" The input cannot be empty \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddGifs, \"7rsH74qoHjBLa5NNUNS9dthWneg=\");\n\n_c = AddGifs;\nexport default AddGifs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddGifs\");","map":{"version":3,"sources":["C:/Users/Cicu/Documents/Assambler/gifty-page/frontend/src/Component/AddGifs/AddGifs.js"],"names":["React","useState","AddGifs","setaddGifs","value","setValue","error","setError","searchGif","e","preventDefault","console","log","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,OAAO,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMO,SAAS,GAAEC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGN,KAAK,KAAK,EAAb,EAAiB;AACfG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;AACD;;AACDA,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAJ,IAAAA,UAAU,CAACC,KAAD,CAAV,CAPoB,CAQpB;;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAXD;;AAcA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAGJ,SAAjB;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AACA,QAAA,QAAQ,EAAEC,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACI,MAAF,CAAST,KAAV,CADvB;AAEA,QAAA,KAAK,EAAEA;AAFP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAOIE,KAAK,gBAAG;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAA0D,EAPnE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7BD;;GAAMJ,O;;KAAAA,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AddGifs = ({ setaddGifs }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const searchGif= e => {\r\n    e.preventDefault();\r\n    if(value === \"\") {\r\n      setError(true);\r\n      return;\r\n    }\r\n    setError(false);\r\n    setaddGifs(value);\r\n    //for delete the input set\r\n    setValue(\"\");\r\n    console.log(\"entra input\")\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={ searchGif }>\r\n        <input type=\"text\" placeholder=\"Search..\"\r\n        onChange={e => setValue(e.target.value)}\r\n        value={value}\r\n        />\r\n      </form>\r\n      { error ? <p className=\"error\"> The input cannot be empty </p> : \"\"}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default AddGifs;\r\n"]},"metadata":{},"sourceType":"module"}